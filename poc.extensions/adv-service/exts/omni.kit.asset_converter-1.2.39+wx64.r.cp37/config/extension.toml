[package]
title = "Asset Converter"
description = "The asset converter API for converting assets. It supports conversion between assets like OBJ, GLTF, FBX and USD."

version = "1.2.39"

changelog = "docs/CHANGELOG.md"
readme  = "docs/README.md"
category = "Utility"
repository = ""

# Preview image and icon. Folder named "data" automatically goes in git lfs (see .gitattributes file).
# Preview image is shown in "Overview" of Extensions window. Screenshot of an extension might be a good preview image.
preview_image = "data/preview.png"

# Icon is shown in Extensions window, it is recommended to be square, of size 256x256.
icon = "data/icon.png"

# Lists people or organizations that are considered the "authors" of the package.
authors = ["NVIDIA"]

[core]
# Load at the start, load all schemas with order -100 (with order -1000 the USD libs are loaded)
order = -100
toggleable = false

[dependencies]
"omni.usd" = {}
"omni.client" = {}
"omni.usd.libs" = {}

[[python.module]]
name = "omni.kit.asset_converter"

# Add this to create package with platform and config information.
[[native.plugin]]
recursive = false

# Extension test settings
[[test]]
stdoutFailPatterns.include = []

args = [
    "--/renderer/enabled=pxr",
    "--/renderer/active=pxr",
    "--/app/file/ignoreUnsavedOnExit=true",
    "--/app/window/dpiScaleOverride=1.0",
    "--/app/window/scaleToMonitor=false",
]

dependencies = [
    "omni.hydra.pxr",
    "omni.kit.window.viewport",
    "omni.kit.window.content_browser",
    "omni.kit.window.viewport",
    "omni.kit.window.stage",
    "omni.kit.widget.layers",
    "omni.kit.property.bundle",
    "omni.kit.window.console",
    "omni.kit.window.status_bar",
    "omni.kit.quicklayout", # arranges the windows correctly
    "omni.kit.ui_test",
    "omni.kit.test_suite.helpers",  
]

stdoutFailPatterns.exclude = [
    "*HydraRenderer failed to render this frame*",  # Can drop a frame or two rendering with OpenGL interop
    "*Cannot use omni.hydra.pxr without OpenGL interop*", # Linux TC configs with multi-GPU might not have OpenGL available
]
